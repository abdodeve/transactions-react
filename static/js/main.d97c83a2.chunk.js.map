{"version":3,"sources":["Components/GlobalStyles.tsx","Store/TransactionData/types.ts","Store/TransactionData/reducers.ts","Store/rootReducer.ts","Store/TransactionData/actions.ts","Utils/TransactionsUtil.ts","Theme/typography.tsx","Theme/index.tsx","Components/Transactions/DeleteConfirmationComponent.tsx","Components/Transactions/DetailsComponent.tsx","Components/Transactions/ShowModelComponent.tsx","Components/Transactions/GridComponent.tsx","Components/Transactions/FormComponent.tsx","Components/Transactions/NewModelComponent.tsx","Screens/Transactions/index.tsx","Components/Summary/CardComponent.tsx","Components/Summary/SummaryComponent.tsx","Screens/Transactions/SummaryScreen.tsx","Navigation/Routes.tsx","Screens/Main/NavBar.tsx","Screens/Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","SET_TRANSACTIONS_DATA","ADD_TRANSACTIONS","REMOVE_TRANSACTION","initialState","rootReducer","combineReducers","TransactionStore","state","action","type","transactions","transaction","filter","el","id","setTransactionsAction","debits","transactionStore","total","Number","amount","toFixed","credits","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createMuiTheme","palette","background","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","modal","display","alignItems","justifyContent","spacing","borderRadius","button","color","buttonConfirmation","marginTop","connector","connect","dispatch","removeTransactionAction","transactionID","classes","React","useState","open","setOpen","Button","variant","startIcon","className","onClick","Modal","aria-labelledby","aria-describedby","onClose","Grid","container","direction","justify","root","flexGrow","textAlign","DetailsComponent","useForm","defaultValues","register","handleSubmit","noValidate","autoComplete","item","xs","TextField","label","name","inputRef","defaultValue","InputLabelProps","shrink","InputProps","readOnly","multiline","rows","border","boxShadow","shadows","ShowModelComponent","size","style","marginRight","columns","field","headerName","flex","renderCell","params","row","value","ownProps","data","Box","mt","Card","pageSize","addTransactionAction","defaultDate","moment","format","required","newTransaction","uuid","NewModelComponent","handleClose","TransactionsListScreen","Container","maxWidth","flexDirection","statsItem","statsIcon","CardComponent","rest","styleTotal","clsx","CardContent","Typography","align","gutterBottom","Divider","p","productCard","SummaryScreen","Routes","exact","path","component","drawer","flexShrink","toolbar","mixins","drawerPaper","content","link","fontWeightMedium","textTransform","appName","items","href","icon","BarChartIcon","title","UsersIcon","window","MyNamespace","NavbarDrawer","children","location","useLocation","useTheme","mobileOpen","setMobileOpen","List","map","index","ListItem","selected","pathname","ListItemIcon","to","aria-label","Hidden","smUp","implementation","Drawer","anchor","ModalProps","keepMounted","xsDown","overflow","MainScreen","store","createStore","App","readJsonData","useEffect","ThemeProvider","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d97c83a2.chunk.js","sourcesContent":["import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    \"@global\": {\r\n      \"*\": {\r\n        boxSizing: \"border-box\",\r\n        margin: 0,\r\n        padding: 0,\r\n      },\r\n      html: {\r\n        \"-webkit-font-smoothing\": \"antialiased\",\r\n        \"-moz-osx-font-smoothing\": \"grayscale\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      body: {\r\n        backgroundColor: \"#f4f6f8\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"#root\": {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","export const SET_TRANSACTIONS_DATA = \"SET_TRANSACTIONS\";\r\nexport const ADD_TRANSACTIONS = \"ADD_TRANSACTION\";\r\nexport const REMOVE_TRANSACTION = \"REMOVE_TRANSACTION\";\r\n\r\nexport type transactionType = {\r\n  id: string | null;\r\n  datetime: string | null;\r\n  amount: string | null;\r\n  type: string | null;\r\n  mode: string | null;\r\n  commentaire: string | null;\r\n};\r\n\r\nexport interface setTransactionsDataActionType {\r\n  type: typeof SET_TRANSACTIONS_DATA;\r\n  transactions: transactionType[];\r\n}\r\n\r\nexport interface addTransactionActionType {\r\n  type: typeof ADD_TRANSACTIONS;\r\n  transaction: transactionType;\r\n}\r\n\r\nexport interface removeTransactionActionType {\r\n  type: typeof REMOVE_TRANSACTION;\r\n  id: string | null;\r\n}\r\n\r\nexport type Actions =\r\n  | setTransactionsDataActionType\r\n  | addTransactionActionType\r\n  | removeTransactionActionType;\r\n","import {\r\n  SET_TRANSACTIONS_DATA,\r\n  ADD_TRANSACTIONS,\r\n  REMOVE_TRANSACTION,\r\n  transactionType,\r\n  Actions,\r\n} from \"./types\";\r\n\r\nconst initialState: transactionType[] = [];\r\n\r\nexport const TransactionReducer = (state = initialState, action: Actions) => {\r\n  switch (action.type) {\r\n    case SET_TRANSACTIONS_DATA:\r\n      return [...state, ...action.transactions];\r\n    case ADD_TRANSACTIONS:\r\n      return [action.transaction, ...state];\r\n    case REMOVE_TRANSACTION:\r\n      return state.filter((el) => el.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { TransactionReducer } from \"./TransactionData/reducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  TransactionStore: TransactionReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import {\r\n  SET_TRANSACTIONS_DATA,\r\n  ADD_TRANSACTIONS,\r\n  REMOVE_TRANSACTION,\r\n  transactionType,\r\n  setTransactionsDataActionType,\r\n  addTransactionActionType,\r\n  removeTransactionActionType,\r\n} from \"./types\";\r\n\r\nexport const setTransactionsAction = (\r\n  transactions: transactionType[]\r\n): setTransactionsDataActionType => ({\r\n  type: SET_TRANSACTIONS_DATA,\r\n  transactions,\r\n});\r\n\r\nexport const addTransactionAction = (\r\n  transaction: transactionType\r\n): addTransactionActionType => ({\r\n  type: ADD_TRANSACTIONS,\r\n  transaction,\r\n});\r\n\r\nexport const removeTransactionAction = (\r\n  id: string | null\r\n): removeTransactionActionType => ({\r\n  type: REMOVE_TRANSACTION,\r\n  id,\r\n});\r\n","// import React from \"react\";\r\nimport data from \"../dummy-data/transactions-data.json\";\r\nimport { transactionType } from \"./../Store/TransactionData/types\";\r\n\r\nexport const readJson = () => {\r\n  return data.transactions;\r\n};\r\n\r\nexport const debits = (transactionStore: transactionType[]) => {\r\n  let total = 0;\r\n  for (let el of transactionStore) {\r\n    if (el.type == \"débit\") {\r\n      total += Number(el.amount);\r\n    }\r\n  }\r\n  return total.toFixed(2);\r\n};\r\n\r\nexport const credits = (transactionStore: transactionType[]) => {\r\n  let total = 0;\r\n  for (let el of transactionStore) {\r\n    if (el.type == \"crédit\") {\r\n      total += Number(el.amount);\r\n    }\r\n  }\r\n  return total.toFixed(2);\r\n};\r\n\r\nexport const total = (transactionStore: transactionType[]) => {\r\n  let total =\r\n    Number(debits(transactionStore)) + Number(credits(transactionStore));\r\n  return total.toFixed(2);\r\n};\r\n","const typography = {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: colors.common.white,\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n  typography,\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { removeTransactionAction } from \"./../../Store/TransactionData/actions\";\r\nimport { removeTransactionActionType } from \"./../../Store/TransactionData/types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(2, 4),\r\n      borderRadius: 10,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      backgroundColor: \"#f44336\",\r\n      color: \"#fff\",\r\n    },\r\n    buttonConfirmation: {\r\n      margin: theme.spacing(1),\r\n      marginTop: \"3ch\",\r\n      backgroundColor: \"#f44336\",\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    removeTransactionAction: (id: string | null) => {\r\n      dispatch(removeTransactionAction(id));\r\n    },\r\n  };\r\n};\r\n\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\ntype DeleteConfirmationComponentProps = {\r\n  transactionID: string | null;\r\n};\r\ntype Props = ReturnType<typeof mapDispatchToProps> &\r\n  DeleteConfirmationComponentProps;\r\n\r\nconst DeleteConfirmationComponent = ({\r\n  transactionID,\r\n  removeTransactionAction,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onDelete = () => {\r\n    removeTransactionAction(transactionID);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        startIcon={<DeleteIcon />}\r\n        className={classes.button}\r\n        onClick={handleOpen}\r\n      >\r\n        Supprimer\r\n      </Button>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div className={classes.paper}>\r\n          <h4 id=\"transition-modal-description\">\r\n            Voulez-vous bien supprimer cette transaction ?\r\n          </h4>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<DeleteIcon />}\r\n              className={classes.buttonConfirmation}\r\n              onClick={onDelete}\r\n            >\r\n              Confirmer\r\n            </Button>\r\n          </Grid>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connector(DeleteConfirmationComponent);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\nimport DeleteConfirmationComponent from \"./DeleteConfirmationComponent\";\r\nimport { transactionType } from \"../../Store/TransactionData/types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n      },\r\n      flexGrow: 1,\r\n      width: \"80ch\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      backgroundColor: \"#f44336\",\r\n      color: \"#fff\",\r\n    },\r\n  })\r\n);\r\n\r\ntype Inputs = transactionType;\r\n\r\ntype ShowModelComponentProps = {\r\n  transaction: transactionType;\r\n};\r\n\r\nexport default function DetailsComponent({\r\n  transaction,\r\n}: ShowModelComponentProps) {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm<Inputs>({\r\n    defaultValues: transaction,\r\n  });\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label=\"Date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              inputRef={register()}\r\n              type=\"datetime-local\"\r\n              defaultValue=\"2020-05-24T10:30\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"type\"\r\n              name=\"type\"\r\n              label=\"Type\"\r\n              inputRef={register()}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"mode\"\r\n              name=\"mode\"\r\n              inputRef={register()}\r\n              label=\"Mode\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              inputRef={register()}\r\n              label=\"Montant\"\r\n              type=\"number\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"comment\"\r\n              name=\"comment\"\r\n              inputRef={register()}\r\n              label=\"Commentaire\"\r\n              multiline\r\n              rows={4}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n              <DeleteConfirmationComponent transactionID={transaction.id} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport DetailsComponent from \"./DetailsComponent\";\r\nimport { transactionType } from \"./../../Store/TransactionData/types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  })\r\n);\r\n\r\ntype ShowModelComponentProps = {\r\n  transaction: transactionType;\r\n};\r\n\r\nexport default function ShowModelComponent({\r\n  transaction,\r\n}: ShowModelComponentProps) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        style={{ marginRight: 16 }}\r\n        onClick={handleOpen}\r\n      >\r\n        Afficher\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        className={classes.modal}\r\n      >\r\n        <div className={classes.paper}>\r\n          <h2 id=\"transition-modal-title\">Détails transaction</h2>\r\n          <DetailsComponent transaction={transaction} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { DataGrid, GridColDef, GridCellParams } from \"@material-ui/data-grid\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nimport { Box, Card, Button } from \"@material-ui/core\";\r\nimport ShowModelComponent from \"./ShowModelComponent\";\r\nimport { readJson } from \"./../../Utils/TransactionsUtil\";\r\nimport { transactionType } from \"../../Store/TransactionData/types\";\r\nimport { setTransactionsAction } from \"../../Store/TransactionData/actions\";\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"type\",\r\n    headerName: \"Type\",\r\n    flex: 1,\r\n    renderCell: (params: GridCellParams) => (\r\n      <strong>\r\n        <ShowModelComponent transaction={params.row as transactionType} />\r\n        {params.value}\r\n      </strong>\r\n    ),\r\n  },\r\n  {\r\n    field: \"datetime\",\r\n    headerName: \"Date\",\r\n    flex: 1,\r\n  },\r\n  { field: \"mode\", headerName: \"Mode\", flex: 1 },\r\n  {\r\n    field: \"amount\",\r\n    headerName: \"Montant\",\r\n    type: \"number\",\r\n    flex: 1,\r\n  },\r\n];\r\n\r\ninterface RootState {\r\n  TransactionStore: Array<transactionType>;\r\n}\r\nconst mapStateToProps = (state: RootState, ownProps: any) => ({\r\n  transactionStore: state.TransactionStore,\r\n  ownProps: ownProps,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    setTransactionsAction: (data: transactionType[]) => {\r\n      dispatch(setTransactionsAction(data));\r\n    },\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst GridComponent: React.FC<Props> = ({ transactionStore }) => {\r\n  return (\r\n    <Box mt={3}>\r\n      <Card style={{ height: 659, width: \"100%\" }}>\r\n        <DataGrid rows={transactionStore} columns={columns} pageSize={10} />\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connector(GridComponent);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { transactionType } from \"../../Store/TransactionData/types\";\r\nimport { addTransactionAction } from \"../../Store/TransactionData/actions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n      },\r\n      flexGrow: 1,\r\n      width: \"80ch\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\ntype Inputs = transactionType;\r\n\r\ninterface RootState {\r\n  TransactionStore: Array<transactionType>;\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: any) => ({\r\n  transactionStore: state.TransactionStore,\r\n  ownProps: ownProps,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    addTransactionAction: (data: transactionType) => {\r\n      dispatch(addTransactionAction(data));\r\n    },\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\ntype compProps = {\r\n  onClose: Function;\r\n};\r\ntype Props = ReturnType<typeof mapDispatchToProps> & compProps;\r\n\r\nconst FormComponent: React.FC<Props> = ({\r\n  addTransactionAction,\r\n  onClose,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm<Inputs>();\r\n  var defaultDate = moment().format(\"YYYY-MM-DDThh:mm:ss\");\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    onClose();\r\n    const newTransaction = { ...data, id: uuid() };\r\n    addTransactionAction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"datetime\"\r\n              name=\"datetime\"\r\n              inputRef={register({ required: true })}\r\n              label=\"Date\"\r\n              type=\"datetime-local\"\r\n              defaultValue={defaultDate}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"type\"\r\n              name=\"type\"\r\n              inputRef={register({ required: true })}\r\n              label=\"Type\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"mode\"\r\n              name=\"mode\"\r\n              inputRef={register({ required: true })}\r\n              label=\"Mode\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              inputRef={register({ required: true })}\r\n              label=\"Montant\"\r\n              type=\"number\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"comment\"\r\n              name=\"comment\"\r\n              inputRef={register}\r\n              label=\"Commentaire\"\r\n              multiline\r\n              rows={4}\r\n            />\r\n          </Grid>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit(onSubmit)}\r\n              >\r\n                Valider\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connector(FormComponent);\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport FormComponent from \"./FormComponent\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function NewModelComponent() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" variant=\"contained\" onClick={handleOpen}>\r\n        Nouvelle Transactions\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        className={classes.modal}\r\n      >\r\n        <div className={classes.paper}>\r\n          <h2 id=\"transition-modal-title\">Nouvelle transaction</h2>\r\n          <FormComponent onClose={handleClose} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\nimport GridComponent from \"../../Components/Transactions/GridComponent\";\r\nimport NewTransactionComponent from \"../../Components/Transactions/NewModelComponent\";\r\n\r\nconst TransactionsListScreen = () => {\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\">\r\n        <NewTransactionComponent />\r\n      </Box>\r\n      <GridComponent />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TransactionsListScreen;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Euro from \"@material-ui/icons/Euro\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  statsItem: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ntype CardComponentProps = {\r\n  type: string;\r\n  amount: string;\r\n  className: string;\r\n};\r\n\r\nconst CardComponent = ({\r\n  type,\r\n  amount,\r\n  className,\r\n  ...rest\r\n}: CardComponentProps) => {\r\n  const classes = useStyles();\r\n  const styleTotal = type === \"Total\" ? { color: \"#f1c40f\" } : {};\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h4\"\r\n          style={styleTotal}\r\n        >\r\n          {type}\r\n        </Typography>\r\n      </CardContent>\r\n      <Box flexGrow={1} />\r\n      <Divider />\r\n      <Box p={2}>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <Grid className={classes.statsItem} item>\r\n            <Euro\r\n              className={classes.statsIcon}\r\n              color=\"action\"\r\n              style={styleTotal}\r\n            />\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textSecondary\"\r\n              display=\"inline\"\r\n              style={styleTotal}\r\n            >\r\n              {amount}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nimport { debits, credits, total } from \"./../../Utils/TransactionsUtil\";\r\nimport { transactionType } from \"../../Store/TransactionData/types\";\r\nimport { setTransactionsAction } from \"../../Store/TransactionData/actions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      height: 250,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    productCard: {\r\n      height: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface RootState {\r\n  TransactionStore: Array<transactionType>;\r\n}\r\nconst mapStateToProps = (state: RootState, ownProps: any) => ({\r\n  transactionStore: state.TransactionStore,\r\n  ownProps: ownProps,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\ntype Props = ReturnType<typeof mapStateToProps>;\r\n\r\nconst SummaryComponent: React.FC<Props> = ({ transactionStore }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <CardComponent\r\n            type=\"Débits\"\r\n            amount={debits(transactionStore)}\r\n            className={classes.productCard}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <CardComponent\r\n            type=\"Crédits\"\r\n            amount={credits(transactionStore)}\r\n            className={classes.productCard}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <CardComponent\r\n            type=\"Total\"\r\n            amount={total(transactionStore)}\r\n            className={classes.productCard}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connector(SummaryComponent);\r\n","import React from \"react\";\r\nimport SummaryComponent from \"../../Components/Summary/SummaryComponent\";\r\n\r\nconst SummaryScreen = () => {\r\n  return <SummaryComponent />;\r\n};\r\n\r\nexport default SummaryScreen;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport TransactionsListScreen from \"./../Screens/Transactions\";\r\nimport SummaryScreen from \"../Screens/Transactions/SummaryScreen\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={TransactionsListScreen} />\r\n        <Route\r\n          exact\r\n          path=\"/transactions-react\"\r\n          component={TransactionsListScreen}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transactions-react/list\"\r\n          component={TransactionsListScreen}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transactions-react/summary\"\r\n          component={SummaryScreen}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport { BarChart as BarChartIcon, Users as UsersIcon } from \"react-feather\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  link: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    padding: \"10px 8px\",\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  appName: { fontWeight: \"bold\", color: \"#3498db\" },\r\n}));\r\n\r\nconst items = [\r\n  {\r\n    href: \"/transactions-react/list\",\r\n    icon: BarChartIcon,\r\n    title: \"List\",\r\n  },\r\n  {\r\n    href: \"/transactions-react/summary\",\r\n    icon: UsersIcon,\r\n    title: \"Récapitulatif\",\r\n  },\r\n];\r\n\r\ntype NavbarDrawerProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    MyNamespace: any;\r\n  }\r\n}\r\n\r\nwindow.MyNamespace = window.MyNamespace || {};\r\n\r\nconst NavbarDrawer: FunctionComponent<NavbarDrawerProps> = ({\r\n  children,\r\n}: NavbarDrawerProps) => {\r\n  const location = useLocation();\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h3\"\r\n          className={classes.appName}\r\n        >\r\n          Transactions\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <List>\r\n        {items.map((item, index) => (\r\n          <ListItem\r\n            button\r\n            key={index}\r\n            selected={item.href === location.pathname}\r\n          >\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <Link className={classes.link} to={item.href}>\r\n              {item.title}\r\n            </Link>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarDrawer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Routes from \"./../../Navigation/Routes\";\r\nimport NavbarDrawer from \"./NavBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst MainScreen = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NavbarDrawer>\r\n        <Routes />\r\n      </NavbarDrawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React, { useEffect } from \"react\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport GlobalStyles from \"./Components/GlobalStyles\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { rootReducer } from \"./Store/rootReducer\";\nimport { setTransactionsAction } from \"./Store/TransactionData/actions\";\nimport { transactionType } from \"./Store/TransactionData/types\";\nimport { readJson } from \"./Utils/TransactionsUtil\";\n\nimport theme from \"./Theme\";\nimport Main from \"./Screens/Main\";\nimport \"./App.css\";\n\nconst store = createStore(rootReducer);\n\nfunction App() {\n  const readJsonData: transactionType[] = readJson();\n  useEffect(() => {\n    store.dispatch(setTransactionsAction(readJsonData));\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <GlobalStyles />\n            <Main />\n          </Router>\n        </Provider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}